#!/usr/bin/env /usr/local/bin/bash

export BT="${HOME}/.bt"
. ${BT}/settings
. ${BT}/src/inst.arr

#BT_DEBUG="gen"

# regenerate inst array, if not present.
# 
[[ "${#inst[@]}" -le 3 ]] && { 
  # Queries aws for a list of all instances. 
  # Caches them as an associative array in a 
  # local file.
  # 
  cache_inst
  # creates: fully populated inst_map array.
  get_inst

} 

[[ "${#inst_map[@]}" -lt 2 ]] && {
  echo "FATAL: Could not generate inst_map array." \
  && exit 1
}  

### ----------------------------------------------------
### Print a bash completion file, for sourcing. 
### ----------------------------------------------------
SSM_CMPL=${BT}/src/ssm.cmpl
cat ${BT}/inst/txt/bt_bash_header                  > $SSM_CMPL
echo -ne '\n\ncomplete -W "\n'                    >> $SSM_CMPL
for i in `printf '%s\n' ${!inst[@]} | sort`; do
  printf '  %s \\\n' $i                           >> $SSM_CMPL
done
echo -ne "\" ssm ssm.bash ssh_over_ssm\n"                  >> $SSM_CMPL
echo done.

debug inst 
debug declare -p inst

### ----------------------------------------------------
### Queue Spider-Man Theme Song...
### ----------------------------------------------------
SSM_SRC=${BT}/src/ssm.src
cat ${BT}/inst/txt/bt_header                       > $SSM_SRC
while IFS= read l; do
  region=${AWS_CONFIGURE_SSO_DEFAULT_SSO_REGION}
  host=$(echo $l | awk -F, '{print $1}')
  instance=$(echo $l | awk -F, '{print $2}')
  echo alias $host=\"aws ssm start-session \
    --target "${instance}" \
    --region ${region}\" >> "${SSM_SRC}"
done< <(printf "%s\n" ${inst[@]} | grep '%' | sort) 
