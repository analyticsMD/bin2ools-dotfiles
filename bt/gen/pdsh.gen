#!/usr/bin/env /usr/local/bin/bash

source ${BT}/lib/bt_env

#BT_DEBUG=yes

try_login

declare -a tmp
tmp+="$(aws ec2 describe-instances \
    --output json \
    --region us-west-2 \
    --filters Name=tag-key,Values=Name \
    --query 'Reservations[*].Instances[*].{
               Instance:InstanceId,
               Name:Tags[?Key==`Name`]|[0].Value,
               PrivAddr:PrivateIpAddress,
               KeyName:KeyName,
               PubAddr:PublicIpAddress
           }' | \
    jq -r '.[][]|
             (.Name|gsub(" "; "_"))+","+
             (.Instance)+","+
             (.PrivAddr)+","+
             (.KeyName)+","+
             (.PubAddr)+"%"
     ')"

[ ! -d "${BT}/utils/gen" ] && \
bt_log "FATAL: ${BT}/utils/gen dir not found." && die


# TODO: Write to json. 

### build an associative array of hosts and descriptors.
### ----------------------------------------------------
mkdir -p ${HOME}/tmp
tmppath="$(gmktemp -p ${HOME}/tmp inst_map.XXXXXXXXXXXX)"
cat ${BT}/inst/bt_header                      > $tmppath
echo -ne 'declare -A inst_map=('             >> $tmppath
while IFS= read -r l; do 
  while IFS=',' read -r n i ip k pp; do
    s="[$n]=$n,$i,$ip,$k,$pp%"
    bash -c "echo -ne $(printf ' %q' "$s ")" >> $tmppath
  done 
done < <(printf '%s\n' "${tmp[@]}" | sort)
echo -ne ")\n"                               >> $tmppath
mv $tmppath "${BT}/sources/generate.d/inst_map.gen"
rm -rf $tmppath

### ----------------------------------------------------
### Print a bash completion file, for sourcing. 
### ----------------------------------------------------
INST_CMPL=${BT}/sources/generate.d/inst.cmpl
cat ${BT}/inst/txt/bt_bash_header            > $INST_CMPL
echo -ne '\n\ncomplete -W "\n'              >> $INST_CMPL
for c in ${clusters[@]}; do
  printf '  %s \\\n' $c                     >> $INST_CMPL
done
echo -ne "\" pdsh\n"                        >> $INST_CMPL
echo done.

debug inst_map 
debug declare -p inst_map

# Dynamically generate pdsh groups for each of our stacks.
#
echo -ne "\n------------------------\n"
echo -ne   "Generating dsh groups..."
echo -ne "\n------------------------\n"

DSH_DIR="${HOME}/.dsh/group"

for s in $(${BT}/cmd/aws/get_stacks); do 
  echo doing ${s}...
  find_in inst_map _ | grep ${s} | cut -d',' -f 1  > ~/.dsh/group/${s}
done

# Get the host array. 
source ${BT}/sources/generate.d/inst_map.gen
# NOTE: Purchase donuts now.
echo doing mirth group ...

find_in inst_map _ | grep -E '(ingestion|mirth)' | cut -d',' -f 1 | sort > ~/.dsh/group/ingestion
echo `cat ~/.dsh/group/ingestion | wc -l` hosts added.

echo doing app group ... 
find_in inst_map _ | grep -E '(\-app)' | cut -d',' -f 1 | sort > ~/.dsh/group/app
echo `cat ~/.dsh/group/app | wc -l` hosts added.

echo doing app-container group ... 
find_in inst_map _ | grep -E '(\-container)' | cut -d',' -f 1 | sort > ~/.dsh/group/app_container
echo `cat ~/.dsh/group/app_container | wc -l` hosts added.

echo doing app-cron group ... 
find_in inst_map _ | grep -E '(\-cron)' | cut -d',' -f 1 | sort > ~/.dsh/group/app_cron
echo `cat ~/.dsh/group/app_cron | wc -l` hosts added.
 
echo done.

