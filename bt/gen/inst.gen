#!/usr/bin/env /usr/local/bin/bash


export BT="${HOME}/.bt"
. "${BT}/settings"
autologin qventus



# Generate an array of all live instances.
#
gen_inst() { 

    
  [[ -z "${BT_TEAM}" ]] && echo "FATAL: No team var." && exit 1

  declare -a tmp
  tmp+=( "$(aws ec2 describe-instances \
          --output json \
          --region us-west-2 \
          --filters Name=tag-key,Values=Name \
          --query 'Reservations[*].Instances[*].{
                   Instance:InstanceId,
                   Name:Tags[?Key==`Name`]|[0].Value,
                   PrivAddr:PrivateIpAddress,
                   KeyName:KeyName,
                   PubAddr:PublicIpAddress
                 }' | \
          jq -r '.[][]|
                (.Name|gsub(" "; "_"))+","+
                (.Instance)+","+
                (.PrivAddr)+","+
                (.KeyName)+","+
                (.PubAddr)+"%"
        ')" )


    ### build an associative array of hosts and descriptors.
    ### ----------------------------------------------------
    mkdir -p "${HOME}/tmp"
    tmppath="$(gmktemp -p "${HOME}"/tmp inst_map.XXXXXXXXXXXX)"
    echo -ne 'declare -A inst=( ' > "$tmppath" 
    while IFS= read -r l; do 
      while IFS=',' read -r n i ip k pp; do
        s="[\\\"$n\\\"]=\\\"$n,$i,$ip,$k,$pp%\\\""
        bash -c "echo -ne $(printf ' %q' "$s ") | perl -pe 's/\!+//g'" >> "${tmppath}"
        to_debug gen echo "wrote: $s"
      done 
    done < <(printf '%s\n' "${tmp[@]}" | sort)
    echo -ne ")\n" >> "$tmppath"
    # move new array to src dir.
    mv "$tmppath" "${BT}/src/inst.arr"
}

to_debug flow echo data:cache_inst

gen_inst

#BT_DEBUG="gen"

touch  ${BT}/src/inst.arr

# TODO #1: Reformat to json. Store in ssm keys (gz,b64). 

# regenerate inst array, if not present.


declare -A inst=()
source <(cat "${BT}"/src/inst.arr)

[[ "${#inst[@]}" -lt 20 ]] && {
  echo "FATAL: Could not generate inst array." \
  && exit 1
}

echo done!
to_debug gen && declare -p inst

